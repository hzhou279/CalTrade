generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  phone         String?   @unique
  phoneVerified DateTime?
  image         String?
  wechatId      String?   @unique
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  role          String?   @default("user")
  items         Item[]    @relation("UserItems")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Item {
  id          String   @id @default(uuid())
  title       String
  description String   @db.Text
  price       Decimal  @db.Decimal(10, 2)
  currency    String
  imageUrl    String?
  category    String
  condition   String
  location    String?
  sellerId    String
  sellerName  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  seller      User     @relation("UserItems", fields: [sellerId], references: [id])

  @@index([sellerId])
  @@index([category])
}
